<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Week Two on Xtern Bootcamp 2018</title>
    <link>http://xtbc18s1.github.io/week2/</link>
    <description>Recent content in Week Two on Xtern Bootcamp 2018</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://xtbc18s1.github.io/week2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Day 5: Intro to React</title>
      <link>http://xtbc18s1.github.io/week2/day5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xtbc18s1.github.io/week2/day5/</guid>
      <description>Monday, May 21, 2018
Lecture Videos Morning:
 Playlist | Day 5, Part 1  Afternoon:
 Playlist | Day 5, Part 1  Topics DOM Manipulation  contenteditable - MDN documentation keypress events  ES2015+ (ES6+)  Inheritance (with the ES2015 class syntax; it&amp;rsquo;s still prototypal inheritance though) - ES2015 classes on Babel Modules (import/export) - ES2015 modules on Babel  React  Imperative vs. Declarative Components  JSX - Docs: Introducing JSX Props - Docs: Components and Props State - Docs: State and Lifecycle  create-react-app  Examples DOM Manipulation contentEditable is a property that, like the name suggests, allows the content of an HTML element to be edited through user interaction with the DOM (similar to a text input field).</description>
    </item>
    
    <item>
      <title>Day 6: React</title>
      <link>http://xtbc18s1.github.io/week2/day6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xtbc18s1.github.io/week2/day6/</guid>
      <description>Tuesday, May 22, 2018
Recap  Reactrobats (take two): Morning  Lecture Videos Morning:
 Playlist | Day 6, Part 1  Afternoon:
 Playlist | Day 6, Part 1  Topics Scope  Variable Scope (var, const, let)  React  Using map with components Stateless Functional Components  Functional Stateless Components in React Functional Components vs. Stateless Functional Components vs. Stateless Components Nine Wins You Might Have Overlooked  CSS in JS  Examples Variable Scope The biggest difference between var and let is that var variables are scoped to the function in which they are declared, while let variables are scoped to the block in which they are declared.</description>
    </item>
    
  </channel>
</rss>